package com.gujun.ultimate.reflect;

/**
 * @ClassName: Test01
 * @Author GuJun
 * @Description:
 * @Date 2021年07月31日 20:06
 */
public class Test01 {

    //  类的加载、连接和初始化
    //  系统可以在第一次使用某个类时加载该类，也可以采用预加载机制来加载某个类；

    //  类的加载
    //  当程序使用某个类时，若该类还未被加载到内存中，则系统会通过加载，连接，初始化三个步骤来初始化该类；这三个步骤统称为类加载或初始化；
    //  类加载即将类的class文件读入内存，并创建一个Class对象；
    //  类的加载由类加载器完成，加载器由jvm提供；
    //  类的连接    H
    //  类的初始化：
    //  jvm负责对类进行初始化，主要对类变量进行初始化；
    //  类的初始化时机：
    //  1.创建实例，访问类方法，类变量；
    //  2.使用反射创建某个类或接口的Class对象；
    //  3.初始化某个类的子类；
    //  注意若是final类变量，且在编译阶段就能确定下来，这样访问该类变量，也不会初始化；

}
