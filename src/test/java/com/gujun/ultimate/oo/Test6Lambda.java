package com.gujun.ultimate.oo;

/**
 * @ClassName: Test6Lambda
 * @Author GuJun
 * @Description:
 * @Date 2021年07月17日 15:46
 */
public class Test6Lambda {

    //  Lambda表达式支持将代码块作为方法参数，可以使用更简洁的代码来创建只有一个抽象的接口（函数式接口）；
    //  Lambda表达式将会代替实现抽象方法的方法体；
    //  三部分组成
    //  1.形参列表，可以省略类型，若只有一个可以省略()
    //  2.->
    //  3.代码块，若只有一条语句，可以省略{}；若只有一条return语句，可以省略return;

    //  Lambda和函数式接口
    //  函数式接口只含有一个抽象方法，但可以包含多个默认方法，类方法；
    //  Lambda表达式可以赋值，赋值类型必须是明确的函数式接口；

    //  方法引用和构造器引用
    //  若Lambda只有一条语句，还可以在代码块中使用方法引用和构造器引用；
    //  1.引用类方法，类::类方法，被实现方法的全部参数传给该类方法；
    //  2.引用特定对象的实例方法，对象::实例方法，被实现方法的全部参数传给该实例方法；
    //  3.引用某类对象的实例方法，类名::实例方法，被实现方法的第一个参数作为调用者即实例，其余传给该实例方法；
    //  4.引用构造器，类名::new，被实现方法的参数全部传给该构造器；

    //  Lambda和匿名内部类
    //  匿名内部类实现的方法体中可以调用接口中的默认方法，而Lambda不可以；

}
