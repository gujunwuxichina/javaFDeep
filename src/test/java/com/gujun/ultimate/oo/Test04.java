package com.gujun.ultimate.oo;

/**
 * @ClassName: Test04
 * @Author GuJun
 * @Description:
 * @Date 2021年07月01日 14:55
 */
public class Test04 {

    //  抽象类
    //  抽象类不能被实例化，抽象类的构造器不能用于创建实例，只能用于被子类调用；初始化块在是在其子类实例被创建时调用；
    //  抽象类的作用：
    //  抽象类是从多个具体类中抽象出来的父类，具有更高层次的抽象；
    //  可以由抽象类的普通方法依赖于一个抽象方法；

    //  接口
    //  接口里不含普通方法，但可以由默认方法；?
    //  接口定义了一种规范，其定义了某一批类所需要遵守的规范；体现了规范和实现分离的设计；
    //  接口里不能包含构造器和初始化块，可以包含成员变量只能是静态的，方法只能是类方法抽象方法默认方法，内部类；
    //  因为接口定义了规范，所以接口里的所有成员：常量、方法、内部类都是默认public修饰的；对于静态常量默认public static final修饰；
    //  默认方法，默认public default修饰，由其实现类实例来调用；
    //  接口的继承：
    //  接口支持多继承；
    //  接口的作用：
    //  1.定义变量；2.调用接口中的常量；3.被实现；

    //  接口和抽象类
    //  1.接口不能包含普通方法，抽象类可以；
    //  2.接口里不能定义静态方法，抽象类可以；
    //  3.接口里只能定义静态常量；
    //  4.接口里不能包含构造器，初始化块；

    //  面向接口编程
    //  简单工厂模式：
    //  命令模式：

}
