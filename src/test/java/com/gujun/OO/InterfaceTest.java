package com.gujun.OO;

/**
 * @ClassName gu
 * @Description TODO
 * @Author GuJun
 * @Date 2019/6/26 7:03
 * @Version 1.0
 **/
public class InterfaceTest {

    //接口
    //抽象类是从uoge类中抽象出来的模板，若将抽象进行得更彻底，则可以提炼出一种更加特殊的"抽象类"——接口；
    //接口里不包含普通方法，接口里的所有方法都是抽象的；JDK8允许接口中定义默认方法和类方法；
    //接口定义了规范，定义了某一批类需要遵循的规范，体现的是规范和实现的分离；
    //一个接口可以有多个直接父接口；
    //由于接口定义的是一种规范，所以接口里不能包含构造器和初始化块定义；
    //接口里可以有成员变量(只能是静态常量，自动static final修饰)，方法（抽象实例方法，静态方法，默认方法），内部类（包括内部接口，内部枚举）；
    //因为接口定义的是规范，所以修饰符默认都是public;
    //由于接口里没有初始化块和构造器，又因为成员变量是static final修饰所以只能声明时指定初始值；
    //接口里的方法，若是抽象实例方法，则默认public abstract修饰，默认方法和类方法可以有方法体；
    //默认方法，修饰符 (public) default，不能使用接口直接调用默认方法，而是要使用接口的实现类实例调用；
    //类方法，修饰符（public）static，接口可以直接调用；

    //使用接口
    //接口不能用于创建实例，可以用于声明引用类型变量，该变量指向其实现类实例；

}
